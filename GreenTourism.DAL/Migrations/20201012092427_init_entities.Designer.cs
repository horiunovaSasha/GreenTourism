// <auto-generated />
using System;
using GreenTourism.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreenTourism.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201012092427_init_entities")]
    partial class init_entities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreenTourism.DAL.Models.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AuthorId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateAndTime");

                    b.Property<string>("Description");

                    b.Property<int?>("PlaceId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("LocationCoords");

                    b.Property<string>("Name");

                    b.Property<decimal>("Rating");

                    b.Property<int?>("RegionId");

                    b.Property<int?>("SeasonId");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.PlaceAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AmenityId");

                    b.Property<int?>("PlaceId");

                    b.HasKey("Id");

                    b.HasIndex("AmenityId");

                    b.HasIndex("PlaceId");

                    b.ToTable("PlaceAmenity");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Event", b =>
                {
                    b.HasOne("GreenTourism.DAL.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.Place", b =>
                {
                    b.HasOne("GreenTourism.DAL.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("GreenTourism.DAL.Models.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId");
                });

            modelBuilder.Entity("GreenTourism.DAL.Models.PlaceAmenity", b =>
                {
                    b.HasOne("GreenTourism.DAL.Models.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId");

                    b.HasOne("GreenTourism.DAL.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId");
                });
#pragma warning restore 612, 618
        }
    }
}
